//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Features.Components.ProductionComponent production { get { return (Features.Components.ProductionComponent)GetComponent(GameComponentsLookup.Production); } }
    public bool hasProduction { get { return HasComponent(GameComponentsLookup.Production); } }

    public void AddProduction(Features.Config.ProductionData newValue) {
        var index = GameComponentsLookup.Production;
        var component = (Features.Components.ProductionComponent)CreateComponent(index, typeof(Features.Components.ProductionComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceProduction(Features.Config.ProductionData newValue) {
        var index = GameComponentsLookup.Production;
        var component = (Features.Components.ProductionComponent)CreateComponent(index, typeof(Features.Components.ProductionComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveProduction() {
        RemoveComponent(GameComponentsLookup.Production);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherProduction;

    public static Entitas.IMatcher<GameEntity> Production {
        get {
            if (_matcherProduction == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Production);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherProduction = matcher;
            }

            return _matcherProduction;
        }
    }
}
