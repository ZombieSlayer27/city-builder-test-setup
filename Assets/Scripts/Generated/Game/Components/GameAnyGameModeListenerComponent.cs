//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyGameModeListenerComponent anyGameModeListener { get { return (AnyGameModeListenerComponent)GetComponent(GameComponentsLookup.AnyGameModeListener); } }
    public bool hasAnyGameModeListener { get { return HasComponent(GameComponentsLookup.AnyGameModeListener); } }

    public void AddAnyGameModeListener(System.Collections.Generic.List<IAnyGameModeListener> newValue) {
        var index = GameComponentsLookup.AnyGameModeListener;
        var component = (AnyGameModeListenerComponent)CreateComponent(index, typeof(AnyGameModeListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyGameModeListener(System.Collections.Generic.List<IAnyGameModeListener> newValue) {
        var index = GameComponentsLookup.AnyGameModeListener;
        var component = (AnyGameModeListenerComponent)CreateComponent(index, typeof(AnyGameModeListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyGameModeListener() {
        RemoveComponent(GameComponentsLookup.AnyGameModeListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyGameModeListener;

    public static Entitas.IMatcher<GameEntity> AnyGameModeListener {
        get {
            if (_matcherAnyGameModeListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyGameModeListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyGameModeListener = matcher;
            }

            return _matcherAnyGameModeListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyGameModeListener(IAnyGameModeListener value) {
        var listeners = hasAnyGameModeListener
            ? anyGameModeListener.value
            : new System.Collections.Generic.List<IAnyGameModeListener>();
        listeners.Add(value);
        ReplaceAnyGameModeListener(listeners);
    }

    public void RemoveAnyGameModeListener(IAnyGameModeListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyGameModeListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyGameModeListener();
        } else {
            ReplaceAnyGameModeListener(listeners);
        }
    }
}
