//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigContext {

    public ConfigEntity assetConfigEntity { get { return GetGroup(ConfigMatcher.AssetConfig).GetSingleEntity(); } }
    public AssetConfigComponent assetConfig { get { return assetConfigEntity.assetConfig; } }
    public bool hasAssetConfig { get { return assetConfigEntity != null; } }

    public ConfigEntity SetAssetConfig(Features.Config.IAssetConfig newValue) {
        if (hasAssetConfig) {
            throw new Entitas.EntitasException("Could not set AssetConfig!\n" + this + " already has an entity with AssetConfigComponent!",
                "You should check if the context already has a assetConfigEntity before setting it or use context.ReplaceAssetConfig().");
        }
        var entity = CreateEntity();
        entity.AddAssetConfig(newValue);
        return entity;
    }

    public void ReplaceAssetConfig(Features.Config.IAssetConfig newValue) {
        var entity = assetConfigEntity;
        if (entity == null) {
            entity = SetAssetConfig(newValue);
        } else {
            entity.ReplaceAssetConfig(newValue);
        }
    }

    public void RemoveAssetConfig() {
        assetConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class ConfigEntity {

    public AssetConfigComponent assetConfig { get { return (AssetConfigComponent)GetComponent(ConfigComponentsLookup.AssetConfig); } }
    public bool hasAssetConfig { get { return HasComponent(ConfigComponentsLookup.AssetConfig); } }

    public void AddAssetConfig(Features.Config.IAssetConfig newValue) {
        var index = ConfigComponentsLookup.AssetConfig;
        var component = (AssetConfigComponent)CreateComponent(index, typeof(AssetConfigComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAssetConfig(Features.Config.IAssetConfig newValue) {
        var index = ConfigComponentsLookup.AssetConfig;
        var component = (AssetConfigComponent)CreateComponent(index, typeof(AssetConfigComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAssetConfig() {
        RemoveComponent(ConfigComponentsLookup.AssetConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class ConfigMatcher {

    static Entitas.IMatcher<ConfigEntity> _matcherAssetConfig;

    public static Entitas.IMatcher<ConfigEntity> AssetConfig {
        get {
            if (_matcherAssetConfig == null) {
                var matcher = (Entitas.Matcher<ConfigEntity>)Entitas.Matcher<ConfigEntity>.AllOf(ConfigComponentsLookup.AssetConfig);
                matcher.componentNames = ConfigComponentsLookup.componentNames;
                _matcherAssetConfig = matcher;
            }

            return _matcherAssetConfig;
        }
    }
}
